---
openapi: 3.0.0
info:
  title: Persons Endpoint
  description: Persons API for the udaconnect project
  version: 1.0.0
paths:
  /api/persons:
    get:
      summary: gets all people information
      operationId: getAllPersons
      responses:
        "200":
          description: Succesfully fetched the requested info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonResponse'
        "400":
          description: bad input parameter
        "404":
          description: company not found
    post:
      tags:
      - creates a new person
      summary: creates a new person record
      description: Create a new record for person
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "201":
          description: created new person
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        "400":
          description: bad input parameter
  /api/persons/{person_id}/connection:
    get:
      summary: Gets the connections of a specific Person
      description: |
        Retrieves all connections for a specific Person
      operationId: getConnections
      parameters:
      - in: query
        description: Proximity to a given user in meters
        name: distance
        required: True
        schema:
          type: string
      - in: query
        description: Start date range
        name: startDate
        required: True
        schema:
          type: string
      - in: query
        description: End date range
        name: endDate
        required: True
        schema:
          type: string
      - name: person_id
        in: path
        description: The Person's ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved all connections for a Person
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Connection'
        "400":
          description: Bad input parameter
  /api/locations/{location_id}:
    get:
      summary: Gets a specific location by its ID
      description: |
        Retrieves all the details of a specific location
      operationId: getLocation
      parameters:
      - name: location_id
        in: path
        description: The Locations's ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrieved the location specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponse'
        "400":
          description: Bad input parameter
        "404":
          description: The specified location ID was not found in the database
  /api/locations/:
    post:
      summary: Creates a new Location record in the database
      description: Create a new location record in the database
      operationId: createLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        "202":
          description: The request was accepted
        "400":
          description: Bad input parameter 
components:
  schemas:
    PersonResponse:
      required:
      - id
      - first_name
      - last_name
      - company_name
      type: object
      properties:
        userid:
          type: integer
          example: 1
        first_name:
          type: string
          example: "Harry"
        last_name:
          type: string
          example: "Truman"
        company_name:
          type: string
          example: "Target"
    Person:
      required:
      - first_name
      - last_name
      - company_name
      type: object
      properties:
        first_name:
          type: string
          example: "Harry"
        last_name:
          type: string
          example: "Truman"
        company_name:
          type: string
          example: "Target"
    Connection:
      required:
      - person
      - location
      type: object
      properties:
        person:
          type: object
          example:
          - id: 7
            first_name: "Harry"
            last_name: "Truman"
            company_name: "Target"
        location:
          type: object
          example:
          - id: 4
            person_id: 4
            longitude: 44.733443
            latitude: -321.46224
            creation_time: "2022-03-21 11:20:05"
    Location:
      required:
      - person_id
      - longitude
      - latitude
      type: object
      properties:
        person_id:
          type: integer
          example: 1
        longitude:
          type: string
          example: "550"
        latitude:
          type: string
          example: "-200"
    LocationResponse:
      required:
      - id
      - person_id
      - longitude
      - latitude
      - creation_time
      type: object
      properties:
        id:
          type: integer 
          example: 8
        person_id:
          type: integer
          example: 7
        longitude:
          type: string
          example: "190"
        latitude:
          type: string
          example: "-120"
        creation_time:
          type: string
          example: "2022-03-21 11:20:05"